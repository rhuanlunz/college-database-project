-- https://stackoverflow.com/questions/34553826/easiest-way-to-create-an-auto-increment-field-in-firebird-database

CREATE TABLE user_account (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    description VARCHAR(100),
    photo_path VARCHAR(500) DEFAULT '/profile/pic/path',
    gender VARCHAR(25) DEFAULT NULL,
    is_verified BOOLEAN DEFAULT FALSE,
    birthdate DATE DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id)
);

CREATE TABLE post (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER,
    content VARCHAR(500) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE
);

CREATE TABLE post_comment (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER,
    post_id INTEGER,
    content VARCHAR(500) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES POST(id) ON DELETE CASCADE
);

CREATE TABLE post_like (
    user_id INTEGER,
    post_id INTEGER,
    
    PRIMARY KEY (user_id, post_id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES POST(id) ON DELETE CASCADE
);

CREATE TABLE user_follower (
    user_id INTEGER,
    follower_id INTEGER,
    
    PRIMARY KEY (user_id, follower_id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE,
    FOREIGN KEY (follower_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE
);

CREATE TABLE user_activity_log (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER,
    
    executed_action VARCHAR(128),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id) ON DELETE CASCADE
);

CREATE TABLE user_settings (
    user_id INTEGER,
    
    is_profile_private BOOLEAN DEFAULT FALSE,
    dark_mode_enabled BOOLEAN DEFAULT FALSE,
    notifications_enabled BOOLEAN DEFAULT TRUE,
    show_online_status BOOLEAN DEFAULT TRUE,
    allow_follow_requests BOOLEAN DEFAULT TRUE,
    content_filter_enabled BOOLEAN DEFAULT TRUE,
    language VARCHAR(15) DEFAULT 'en-us',
    
    PRIMARY KEY (user_id),
    FOREIGN KEY (user_id) REFERENCES USER_ACCOUNT(id)
);